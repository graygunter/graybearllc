{"ast":null,"code":"var _jsxFileName = \"/Users/graygunter/Sites/graybearllc /src/components/Projects.jsx\";\nimport React, { Component } from \"react\";\nimport ProjectContainer from \"./ProjectContainer\";\nimport UXUIContainer from \"./UXUIContainer\";\nimport UXUISlide from \"./UXUISlide\";\nimport ArtContainer from \"./ArtContainer\";\n\nvar Carousel = require(\"react-responsive-carousel\").Carousel;\n\nclass Projects extends Component {\n  constructor() {\n    super();\n    this.generateProjects = this.generateProjects.bind(this);\n    this.generateDevDesignProjects = this.generateDevDesignProjects.bind(this);\n    this.generateUXUIProjects = this.generateUXUIProjects.bind(this);\n    this.generateArtProjects = this.generateArtProjects.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.generateSlideShow = this.generateSlideShow.bind(this);\n    this.slideShowClicked = this.slideShowClicked.bind(this);\n    this.slideShowClosed = this.slideShowClosed.bind(this);\n    this.state = {\n      showSlideShow: false,\n      slideLongDescription: \"\",\n      slideNames: []\n    };\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  generateDevDesignProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let agencyLink = projectsDataArray[i][\"agency-link\"];\n      let agencyName = projectsDataArray[i][\"agency-name\"];\n      let clientLink = projectsDataArray[i][\"client-link\"];\n      let clientName = projectsDataArray[i][\"client-name\"];\n      let description = projectsDataArray[i][\"description\"];\n      let projectLink = projectsDataArray[i][\"link\"];\n      let projectName = projectsDataArray[i][\"name\"];\n      let role = projectsDataArray[i][\"role\"];\n      let vimeoID = projectsDataArray[i][\"vimeo-id\"];\n      let newProject = /*#__PURE__*/React.createElement(ProjectContainer, {\n        agencyLink: agencyLink,\n        agencyName: agencyName,\n        clientLink: clientLink,\n        clientName: clientName,\n        description: description,\n        id: i,\n        key: \"container\" + i,\n        projectLink: projectLink,\n        projectName: projectName,\n        role: role,\n        vimeoID: vimeoID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      });\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  slideShowClicked(e, longDescription) {\n    this.setState({\n      slideNames: e\n    });\n    this.setState({\n      slideLongDescription: longDescription\n    });\n    this.setState({\n      showSlideShow: true\n    });\n  }\n\n  slideShowClosed() {\n    this.setState({\n      slideNames: []\n    });\n    this.setState({\n      slideLongDescription: \"\"\n    });\n    this.setState({\n      showSlideShow: false\n    });\n  }\n\n  generateSlideShow(slides, projectsDataArray) {\n    let slideNames = this.state.slideNames;\n\n    for (let i = 0; i < slideNames.length; i++) {\n      let newSlide = /*#__PURE__*/React.createElement(UXUISlide, {\n        img: slideNames[i],\n        key: \"slide\" + i,\n        longDescription: this.state.slideLongDescription,\n        slideShowClosed: this.slideShowClosed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      });\n      slides.push(newSlide);\n    }\n\n    let slideCarousel = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"carouselWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      autoPlay: true,\n      infiniteLoop: true,\n      showArrows: true,\n      transitionTime: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, slides));\n    return slideCarousel;\n  }\n\n  generateUXUIProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let uxuiAltText = projectsDataArray[i][\"altText\"];\n      let uxuiBriefDescription = projectsDataArray[i][\"briefDescription\"];\n      let uxuiLongDescription = projectsDataArray[i][\"longDescription\"];\n      let uxuiName = projectsDataArray[i][\"name\"];\n      let uxuiSlides = projectsDataArray[i][\"slides\"];\n      let uxuiThumbnail = projectsDataArray[i][\"thumbnail\"];\n      let newProject = /*#__PURE__*/React.createElement(UXUIContainer, {\n        altText: uxuiAltText,\n        briefDescription: uxuiBriefDescription,\n        id: i,\n        key: \"uxui-container\" + i,\n        longDescription: uxuiLongDescription,\n        name: uxuiName,\n        slides: uxuiSlides,\n        slideShowClicked: this.slideShowClicked,\n        thumbnail: uxuiThumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      });\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  generateArtProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let uxuiAltText = projectsDataArray[i][\"altText\"];\n      let uxuiBriefDescription = projectsDataArray[i][\"briefDescription\"];\n      let uxuiLongDescription = projectsDataArray[i][\"longDescription\"];\n      let uxuiName = projectsDataArray[i][\"name\"];\n      let uxuiSlides = projectsDataArray[i][\"slides\"];\n      let uxuiThumbnail = projectsDataArray[i][\"thumbnail\"];\n      let newProject = /*#__PURE__*/React.createElement(UXUIContainer, {\n        altText: uxuiAltText,\n        briefDescription: uxuiBriefDescription,\n        id: i,\n        key: \"uxui-container\" + i,\n        longDescription: uxuiLongDescription,\n        name: uxuiName,\n        slides: uxuiSlides,\n        slideShowClicked: this.slideShowClicked,\n        thumbnail: uxuiThumbnail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      });\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  generateProjects() {\n    let projects = [];\n    let projectsDataArray = this.props.projectsData;\n    projectsDataArray = this.shuffle(projectsDataArray);\n    if (this.props.isDevDesign) this.generateDevDesignProjects(projects, projectsDataArray);\n    if (this.props.isUXUI) this.generateUXUIProjects(projects, projectsDataArray);\n    if (this.props.isArt) this.generateArtProjects(projects, projectsDataArray);\n    return projects;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"projects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, this.generateProjects(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slideshow-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }, this.slideShowClicked ? this.generateSlideShow([], this.props.projectsData) : null));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/graygunter/Sites/graybearllc /src/components/Projects.jsx"],"names":["React","Component","ProjectContainer","UXUIContainer","UXUISlide","ArtContainer","Carousel","require","Projects","constructor","generateProjects","bind","generateDevDesignProjects","generateUXUIProjects","generateArtProjects","shuffle","generateSlideShow","slideShowClicked","slideShowClosed","state","showSlideShow","slideLongDescription","slideNames","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","projects","projectsDataArray","i","agencyLink","agencyName","clientLink","clientName","description","projectLink","projectName","role","vimeoID","newProject","push","e","longDescription","setState","slides","newSlide","slideCarousel","uxuiAltText","uxuiBriefDescription","uxuiLongDescription","uxuiName","uxuiSlides","uxuiThumbnail","props","projectsData","isDevDesign","isUXUI","isArt","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProjectContainer from \"./ProjectContainer\";\nimport UXUIContainer from \"./UXUIContainer\";\nimport UXUISlide from \"./UXUISlide\";\nimport ArtContainer from \"./ArtContainer\";\n\nvar Carousel = require(\"react-responsive-carousel\").Carousel;\n\nclass Projects extends Component {\n  constructor() {\n    super();\n\n    this.generateProjects = this.generateProjects.bind(this);\n    this.generateDevDesignProjects = this.generateDevDesignProjects.bind(this);\n    this.generateUXUIProjects = this.generateUXUIProjects.bind(this);\n    this.generateArtProjects = this.generateArtProjects.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.generateSlideShow = this.generateSlideShow.bind(this);\n    this.slideShowClicked = this.slideShowClicked.bind(this);\n    this.slideShowClosed = this.slideShowClosed.bind(this);\n\n    this.state = {\n      showSlideShow: false,\n      slideLongDescription: \"\",\n      slideNames: [],\n    };\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  generateDevDesignProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let agencyLink = projectsDataArray[i][\"agency-link\"];\n      let agencyName = projectsDataArray[i][\"agency-name\"];\n\n      let clientLink = projectsDataArray[i][\"client-link\"];\n      let clientName = projectsDataArray[i][\"client-name\"];\n\n      let description = projectsDataArray[i][\"description\"];\n\n      let projectLink = projectsDataArray[i][\"link\"];\n      let projectName = projectsDataArray[i][\"name\"];\n\n      let role = projectsDataArray[i][\"role\"];\n\n      let vimeoID = projectsDataArray[i][\"vimeo-id\"];\n\n      let newProject = (\n        <ProjectContainer\n          agencyLink={agencyLink}\n          agencyName={agencyName}\n          clientLink={clientLink}\n          clientName={clientName}\n          description={description}\n          id={i}\n          key={\"container\" + i}\n          projectLink={projectLink}\n          projectName={projectName}\n          role={role}\n          vimeoID={vimeoID}\n        />\n      );\n\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  slideShowClicked(e, longDescription) {\n    this.setState({ slideNames: e });\n    this.setState({ slideLongDescription: longDescription });\n    this.setState({ showSlideShow: true });\n  }\n\n  slideShowClosed() {\n    this.setState({ slideNames: [] });\n    this.setState({ slideLongDescription: \"\" });\n    this.setState({ showSlideShow: false });\n  }\n\n  generateSlideShow(slides, projectsDataArray) {\n    let slideNames = this.state.slideNames;\n\n    for (let i = 0; i < slideNames.length; i++) {\n      let newSlide = (\n        <UXUISlide\n          img={slideNames[i]}\n          key={\"slide\" + i}\n          longDescription={this.state.slideLongDescription}\n          slideShowClosed={this.slideShowClosed}\n        />\n      );\n\n      slides.push(newSlide);\n    }\n\n    let slideCarousel = (\n      <div className={\"carouselWrapper\"}>\n        <Carousel\n          autoPlay={true}\n          infiniteLoop={true}\n          showArrows={true}\n          transitionTime={1}\n        >\n          {slides}\n        </Carousel>\n      </div>\n    );\n\n    return slideCarousel;\n  }\n\n  generateUXUIProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let uxuiAltText = projectsDataArray[i][\"altText\"];\n      let uxuiBriefDescription = projectsDataArray[i][\"briefDescription\"];\n      let uxuiLongDescription = projectsDataArray[i][\"longDescription\"];\n      let uxuiName = projectsDataArray[i][\"name\"];\n      let uxuiSlides = projectsDataArray[i][\"slides\"];\n      let uxuiThumbnail = projectsDataArray[i][\"thumbnail\"];\n\n      let newProject = (\n        <UXUIContainer\n          altText={uxuiAltText}\n          briefDescription={uxuiBriefDescription}\n          id={i}\n          key={\"uxui-container\" + i}\n          longDescription={uxuiLongDescription}\n          name={uxuiName}\n          slides={uxuiSlides}\n          slideShowClicked={this.slideShowClicked}\n          thumbnail={uxuiThumbnail}\n        />\n      );\n\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  generateArtProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let uxuiAltText = projectsDataArray[i][\"altText\"];\n      let uxuiBriefDescription = projectsDataArray[i][\"briefDescription\"];\n      let uxuiLongDescription = projectsDataArray[i][\"longDescription\"];\n      let uxuiName = projectsDataArray[i][\"name\"];\n      let uxuiSlides = projectsDataArray[i][\"slides\"];\n      let uxuiThumbnail = projectsDataArray[i][\"thumbnail\"];\n\n      let newProject = (\n        <UXUIContainer\n          altText={uxuiAltText}\n          briefDescription={uxuiBriefDescription}\n          id={i}\n          key={\"uxui-container\" + i}\n          longDescription={uxuiLongDescription}\n          name={uxuiName}\n          slides={uxuiSlides}\n          slideShowClicked={this.slideShowClicked}\n          thumbnail={uxuiThumbnail}\n        />\n      );\n\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  generateProjects() {\n\n    let projects = [];\n\n    let projectsDataArray = this.props.projectsData;\n\n    projectsDataArray = this.shuffle(projectsDataArray);\n\n    if (this.props.isDevDesign)\n      this.generateDevDesignProjects(projects, projectsDataArray);\n\n    if (this.props.isUXUI)\n      this.generateUXUIProjects(projects, projectsDataArray);\n\n    if (this.props.isArt)\n      this.generateArtProjects(projects, projectsDataArray);    \n\n    return projects;\n  }\n\n  render() {\n    return (\n      <div className=\"projects\">\n        {this.generateProjects()}\n\n        <div className=\"slideshow-container\">\n          {this.slideShowClicked\n            ? this.generateSlideShow([], this.props.projectsData)\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}