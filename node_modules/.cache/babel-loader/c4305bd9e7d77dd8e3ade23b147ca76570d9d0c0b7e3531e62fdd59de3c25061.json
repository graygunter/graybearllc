{"ast":null,"code":"var _jsxFileName = \"/Users/johngunter/Sites/my-app/src/components/Projects.jsx\";\nimport React, { Component } from \"react\";\nimport DevDesignContainer from \"./DevDesignContainer\";\nimport UXUIContainer from \"./UXUIContainer\";\nimport ProjectSlide from \"./ProjectSlide\";\nimport ArtContainer from \"./ArtContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Carousel = require(\"react-responsive-carousel\").Carousel;\nclass Projects extends Component {\n  constructor() {\n    super();\n    this.generateProjects = this.generateProjects.bind(this);\n    this.generateDevDesignProjects = this.generateDevDesignProjects.bind(this);\n    this.generateUXUIProjects = this.generateUXUIProjects.bind(this);\n    this.generateArtProjects = this.generateArtProjects.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.generateSlideShow = this.generateSlideShow.bind(this);\n    this.slideShowClicked = this.slideShowClicked.bind(this);\n    this.slideShowClosed = this.slideShowClosed.bind(this);\n    this.state = {\n      showSlideShow: false,\n      slideLongDescription: \"\",\n      slideNames: []\n    };\n  }\n  shuffle(array) {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n  generateDevDesignProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let agencyLink = projectsDataArray[i][\"agency-link\"];\n      let agencyName = projectsDataArray[i][\"agency-name\"];\n      let clientLink = projectsDataArray[i][\"client-link\"];\n      let clientName = projectsDataArray[i][\"client-name\"];\n      let description = projectsDataArray[i][\"description\"];\n      let projectLink = projectsDataArray[i][\"link\"];\n      let projectName = projectsDataArray[i][\"name\"];\n      let role = projectsDataArray[i][\"role\"];\n      let vimeoID = projectsDataArray[i][\"vimeo-id\"];\n      let newProject = /*#__PURE__*/_jsxDEV(DevDesignContainer, {\n        agencyLink: agencyLink,\n        agencyName: agencyName,\n        clientLink: clientLink,\n        clientName: clientName,\n        description: description,\n        id: i,\n        projectLink: projectLink,\n        projectName: projectName,\n        role: role,\n        vimeoID: vimeoID\n      }, \"container\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this);\n      projects.push(newProject);\n    }\n    return projects;\n  }\n  slideShowClicked(e, longDescription) {\n    this.setState({\n      slideNames: e\n    });\n    this.setState({\n      slideLongDescription: longDescription\n    });\n    this.setState({\n      showSlideShow: true\n    });\n  }\n  slideShowClosed() {\n    this.setState({\n      slideNames: []\n    });\n    this.setState({\n      slideLongDescription: \"\"\n    });\n    this.setState({\n      showSlideShow: false\n    });\n  }\n  generateSlideShow(slides, projectsDataArray) {\n    let slideNames = this.state.slideNames;\n    for (let i = 0; i < slideNames.length; i++) {\n      console.log(\"Generate slide \" + i);\n      let newSlide = /*#__PURE__*/_jsxDEV(ProjectSlide, {\n        img: slideNames[i],\n        isUXUI: this.props.isUXUI,\n        isArt: this.props.isArt,\n        longDescription: this.state.slideLongDescription,\n        slideShowClosed: this.slideShowClosed\n      }, \"slide\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n      slides.push(newSlide);\n    }\n    let slideCarousel = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carouselWrapper\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        autoPlay: true,\n        infiniteLoop: true,\n        showArrows: true,\n        transitionTime: 1,\n        children: slides\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n    return slideCarousel;\n  }\n  generateUXUIProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let uxuiAltText = projectsDataArray[i][\"altText\"];\n      let uxuiBriefDescription = projectsDataArray[i][\"briefDescription\"];\n      let uxuiLongDescription = projectsDataArray[i][\"longDescription\"];\n      let uxuiName = projectsDataArray[i][\"name\"];\n      let projectSlides = projectsDataArray[i][\"slides\"];\n      let uxuiThumbnail = projectsDataArray[i][\"thumbnail\"];\n      let newProject = /*#__PURE__*/_jsxDEV(UXUIContainer, {\n        altText: uxuiAltText,\n        briefDescription: uxuiBriefDescription,\n        id: i,\n        longDescription: uxuiLongDescription,\n        name: uxuiName,\n        slides: projectSlides,\n        slideShowClicked: this.slideShowClicked,\n        thumbnail: uxuiThumbnail\n      }, \"uxui-container\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this);\n      projects.push(newProject);\n    }\n    return projects;\n  }\n  generateArtProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let uxuiAltText = projectsDataArray[i][\"altText\"];\n      let uxuiBriefDescription = projectsDataArray[i][\"briefDescription\"];\n      let uxuiLongDescription = projectsDataArray[i][\"longDescription\"];\n      let uxuiName = projectsDataArray[i][\"name\"];\n      let projectSlides = projectsDataArray[i][\"slides\"];\n      let uxuiThumbnail = projectsDataArray[i][\"thumbnail\"];\n      let newProject = /*#__PURE__*/_jsxDEV(ArtContainer, {\n        altText: uxuiAltText,\n        briefDescription: uxuiBriefDescription,\n        id: i,\n        longDescription: uxuiLongDescription,\n        name: uxuiName,\n        slides: projectSlides,\n        slideShowClicked: this.slideShowClicked,\n        thumbnail: uxuiThumbnail\n      }, \"uxui-container\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this);\n      projects.push(newProject);\n    }\n    return projects;\n  }\n  generateProjects() {\n    let projects = [];\n    let projectsDataArray = this.props.projectsData;\n    if (this.props.isDevDesign) {\n      projectsDataArray = this.shuffle(projectsDataArray);\n      this.generateDevDesignProjects(projects, projectsDataArray);\n    }\n    if (this.props.isUXUI) this.generateUXUIProjects(projects, projectsDataArray);\n    if (this.props.isArt) this.generateArtProjects(projects, projectsDataArray);\n    return projects;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `projects ${this.props.isUXUI ? \"uxui\" : \"art\"}`,\n      children: [this.generateProjects(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideshow-container\",\n        children: this.slideShowClicked ? this.generateSlideShow([], this.props.projectsData) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Projects;","map":{"version":3,"names":["React","Component","DevDesignContainer","UXUIContainer","ProjectSlide","ArtContainer","jsxDEV","_jsxDEV","Carousel","require","Projects","constructor","generateProjects","bind","generateDevDesignProjects","generateUXUIProjects","generateArtProjects","shuffle","generateSlideShow","slideShowClicked","slideShowClosed","state","showSlideShow","slideLongDescription","slideNames","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","projects","projectsDataArray","i","agencyLink","agencyName","clientLink","clientName","description","projectLink","projectName","role","vimeoID","newProject","id","fileName","_jsxFileName","lineNumber","columnNumber","push","e","longDescription","setState","slides","console","log","newSlide","img","isUXUI","props","isArt","slideCarousel","className","children","autoPlay","infiniteLoop","showArrows","transitionTime","uxuiAltText","uxuiBriefDescription","uxuiLongDescription","uxuiName","projectSlides","uxuiThumbnail","altText","briefDescription","name","thumbnail","projectsData","isDevDesign","render"],"sources":["/Users/johngunter/Sites/my-app/src/components/Projects.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport DevDesignContainer from \"./DevDesignContainer\";\nimport UXUIContainer from \"./UXUIContainer\";\nimport ProjectSlide from \"./ProjectSlide\";\nimport ArtContainer from \"./ArtContainer\";\n\nlet Carousel = require(\"react-responsive-carousel\").Carousel;\n\nclass Projects extends Component {\n  constructor() {\n    super();\n\n    this.generateProjects = this.generateProjects.bind(this);\n    this.generateDevDesignProjects = this.generateDevDesignProjects.bind(this);\n    this.generateUXUIProjects = this.generateUXUIProjects.bind(this);\n    this.generateArtProjects = this.generateArtProjects.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.generateSlideShow = this.generateSlideShow.bind(this);\n    this.slideShowClicked = this.slideShowClicked.bind(this);\n    this.slideShowClosed = this.slideShowClosed.bind(this);\n\n    this.state = {\n      showSlideShow: false,\n      slideLongDescription: \"\",\n      slideNames: [],\n    };\n  }\n\n  shuffle(array) {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  generateDevDesignProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let agencyLink = projectsDataArray[i][\"agency-link\"];\n      let agencyName = projectsDataArray[i][\"agency-name\"];\n\n      let clientLink = projectsDataArray[i][\"client-link\"];\n      let clientName = projectsDataArray[i][\"client-name\"];\n\n      let description = projectsDataArray[i][\"description\"];\n\n      let projectLink = projectsDataArray[i][\"link\"];\n      let projectName = projectsDataArray[i][\"name\"];\n\n      let role = projectsDataArray[i][\"role\"];\n\n      let vimeoID = projectsDataArray[i][\"vimeo-id\"];\n\n      let newProject = (\n        <DevDesignContainer\n          agencyLink={agencyLink}\n          agencyName={agencyName}\n          clientLink={clientLink}\n          clientName={clientName}\n          description={description}\n          id={i}\n          key={\"container\" + i}\n          projectLink={projectLink}\n          projectName={projectName}\n          role={role}\n          vimeoID={vimeoID}\n        />\n      );\n\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  slideShowClicked(e, longDescription) {\n    this.setState({ slideNames: e });\n    this.setState({ slideLongDescription: longDescription });\n    this.setState({ showSlideShow: true });\n  }\n\n  slideShowClosed() {\n    this.setState({ slideNames: [] });\n    this.setState({ slideLongDescription: \"\" });\n    this.setState({ showSlideShow: false });\n  }\n\n  generateSlideShow(slides, projectsDataArray) {\n    let slideNames = this.state.slideNames;\n\n    for (let i = 0; i < slideNames.length; i++) {\n\n      console.log(\"Generate slide \" + i);\n\n      let newSlide = (\n        <ProjectSlide\n          img={slideNames[i]}\n          isUXUI={this.props.isUXUI}\n          isArt={this.props.isArt}\n          key={\"slide\" + i}\n          longDescription={this.state.slideLongDescription}\n          slideShowClosed={this.slideShowClosed}\n        />\n      );\n\n      slides.push(newSlide);\n    }\n\n    let slideCarousel = (\n      <div className={\"carouselWrapper\"}>\n        <Carousel\n          autoPlay={true}\n          infiniteLoop={true}\n          showArrows={true}\n          transitionTime={1}\n        >\n          {slides}\n        </Carousel>\n      </div>\n    );\n\n    return slideCarousel;\n  }\n\n  generateUXUIProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let uxuiAltText = projectsDataArray[i][\"altText\"];\n      let uxuiBriefDescription = projectsDataArray[i][\"briefDescription\"];\n      let uxuiLongDescription = projectsDataArray[i][\"longDescription\"];\n      let uxuiName = projectsDataArray[i][\"name\"];\n      let projectSlides = projectsDataArray[i][\"slides\"];\n      let uxuiThumbnail = projectsDataArray[i][\"thumbnail\"];\n\n      let newProject = (\n        <UXUIContainer\n          altText={uxuiAltText}\n          briefDescription={uxuiBriefDescription}\n          id={i}\n          key={\"uxui-container\" + i}\n          longDescription={uxuiLongDescription}\n          name={uxuiName}\n          slides={projectSlides}\n          slideShowClicked={this.slideShowClicked}\n          thumbnail={uxuiThumbnail}\n        />\n      );\n\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  generateArtProjects(projects, projectsDataArray) {\n    for (let i = 0; i < projectsDataArray.length; i++) {\n      let uxuiAltText = projectsDataArray[i][\"altText\"];\n      let uxuiBriefDescription = projectsDataArray[i][\"briefDescription\"];\n      let uxuiLongDescription = projectsDataArray[i][\"longDescription\"];\n      let uxuiName = projectsDataArray[i][\"name\"];\n      let projectSlides = projectsDataArray[i][\"slides\"];\n      let uxuiThumbnail = projectsDataArray[i][\"thumbnail\"];\n\n      let newProject = (\n        <ArtContainer\n          altText={uxuiAltText}\n          briefDescription={uxuiBriefDescription}\n          id={i}\n          key={\"uxui-container\" + i}\n          longDescription={uxuiLongDescription}\n          name={uxuiName}\n          slides={projectSlides}\n          slideShowClicked={this.slideShowClicked}\n          thumbnail={uxuiThumbnail}\n        />\n      );\n\n      projects.push(newProject);\n    }\n\n    return projects;\n  }\n\n  generateProjects() {\n\n    let projects = [];\n\n    let projectsDataArray = this.props.projectsData;\n\n    if (this.props.isDevDesign) {\n      projectsDataArray = this.shuffle(projectsDataArray);\n      this.generateDevDesignProjects(projects, projectsDataArray);\n    }\n\n    if (this.props.isUXUI)\n      this.generateUXUIProjects(projects, projectsDataArray);\n\n    if (this.props.isArt)\n      this.generateArtProjects(projects, projectsDataArray);    \n\n    return projects;\n  }\n\n  render() {\n    return (\n      <div className={`projects ${this.props.isUXUI ? \"uxui\" : \"art\"}`}>\n        {this.generateProjects()}\n\n        <div className=\"slideshow-container\">\n          {this.slideShowClicked\n            ? this.generateSlideShow([], this.props.projectsData)\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}